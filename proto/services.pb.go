// Code generated by protoc-gen-go. DO NOT EDIT.
// source: services.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SayHiRequest struct {
	RequestMsg           string   `protobuf:"bytes,1,opt,name=requestMsg,proto3" json:"requestMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SayHiRequest) Reset()         { *m = SayHiRequest{} }
func (m *SayHiRequest) String() string { return proto.CompactTextString(m) }
func (*SayHiRequest) ProtoMessage()    {}
func (*SayHiRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e16ccb8c5307b32, []int{0}
}

func (m *SayHiRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SayHiRequest.Unmarshal(m, b)
}
func (m *SayHiRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SayHiRequest.Marshal(b, m, deterministic)
}
func (m *SayHiRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SayHiRequest.Merge(m, src)
}
func (m *SayHiRequest) XXX_Size() int {
	return xxx_messageInfo_SayHiRequest.Size(m)
}
func (m *SayHiRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SayHiRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SayHiRequest proto.InternalMessageInfo

func (m *SayHiRequest) GetRequestMsg() string {
	if m != nil {
		return m.RequestMsg
	}
	return ""
}

type SayHelloResponse struct {
	ResponseMsg          string   `protobuf:"bytes,1,opt,name=responseMsg,proto3" json:"responseMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SayHelloResponse) Reset()         { *m = SayHelloResponse{} }
func (m *SayHelloResponse) String() string { return proto.CompactTextString(m) }
func (*SayHelloResponse) ProtoMessage()    {}
func (*SayHelloResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e16ccb8c5307b32, []int{1}
}

func (m *SayHelloResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SayHelloResponse.Unmarshal(m, b)
}
func (m *SayHelloResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SayHelloResponse.Marshal(b, m, deterministic)
}
func (m *SayHelloResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SayHelloResponse.Merge(m, src)
}
func (m *SayHelloResponse) XXX_Size() int {
	return xxx_messageInfo_SayHelloResponse.Size(m)
}
func (m *SayHelloResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SayHelloResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SayHelloResponse proto.InternalMessageInfo

func (m *SayHelloResponse) GetResponseMsg() string {
	if m != nil {
		return m.ResponseMsg
	}
	return ""
}

type SayByeResponse struct {
	ResponseMsg          string   `protobuf:"bytes,1,opt,name=responseMsg,proto3" json:"responseMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SayByeResponse) Reset()         { *m = SayByeResponse{} }
func (m *SayByeResponse) String() string { return proto.CompactTextString(m) }
func (*SayByeResponse) ProtoMessage()    {}
func (*SayByeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e16ccb8c5307b32, []int{2}
}

func (m *SayByeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SayByeResponse.Unmarshal(m, b)
}
func (m *SayByeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SayByeResponse.Marshal(b, m, deterministic)
}
func (m *SayByeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SayByeResponse.Merge(m, src)
}
func (m *SayByeResponse) XXX_Size() int {
	return xxx_messageInfo_SayByeResponse.Size(m)
}
func (m *SayByeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SayByeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SayByeResponse proto.InternalMessageInfo

func (m *SayByeResponse) GetResponseMsg() string {
	if m != nil {
		return m.ResponseMsg
	}
	return ""
}

func init() {
	proto.RegisterType((*SayHiRequest)(nil), "pb.SayHiRequest")
	proto.RegisterType((*SayHelloResponse)(nil), "pb.SayHelloResponse")
	proto.RegisterType((*SayByeResponse)(nil), "pb.SayByeResponse")
}

func init() { proto.RegisterFile("services.proto", fileDescriptor_8e16ccb8c5307b32) }

var fileDescriptor_8e16ccb8c5307b32 = []byte{
	// 181 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2b, 0x4e, 0x2d, 0x2a,
	0xcb, 0x4c, 0x4e, 0x2d, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48, 0x52, 0xd2,
	0xe3, 0xe2, 0x09, 0x4e, 0xac, 0xf4, 0xc8, 0x0c, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x92,
	0xe3, 0xe2, 0x2a, 0x82, 0x30, 0x7d, 0x8b, 0xd3, 0x25, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0x90,
	0x44, 0x94, 0x4c, 0xb8, 0x04, 0x40, 0xea, 0x53, 0x73, 0x72, 0xf2, 0x83, 0x52, 0x8b, 0x0b, 0xf2,
	0xf3, 0x8a, 0x53, 0x85, 0x14, 0xb8, 0xb8, 0x8b, 0xa0, 0x6c, 0x84, 0x26, 0x64, 0x21, 0x25, 0x23,
	0x2e, 0xbe, 0xe0, 0xc4, 0x4a, 0xa7, 0xca, 0x54, 0xe2, 0xf5, 0x18, 0xb9, 0x71, 0xf1, 0xc3, 0x6c,
	0x0a, 0x86, 0xb8, 0x5b, 0xc8, 0x98, 0x8b, 0xdd, 0x39, 0x3f, 0xb7, 0xa0, 0xb4, 0x24, 0x55, 0x48,
	0x40, 0xaf, 0x20, 0x49, 0x0f, 0xd9, 0xe5, 0x52, 0x22, 0x30, 0x11, 0x64, 0xb7, 0x29, 0x31, 0x18,
	0x39, 0x71, 0xf1, 0x42, 0xec, 0x86, 0x99, 0x62, 0x88, 0xcf, 0x14, 0x21, 0xa8, 0x08, 0x92, 0x5b,
	0x95, 0x18, 0x92, 0xd8, 0xc0, 0x01, 0x66, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x6a, 0xa2, 0x6d,
	0xe3, 0x42, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SayHelloServiceClient is the client API for SayHelloService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SayHelloServiceClient interface {
	Compute(ctx context.Context, in *SayHiRequest, opts ...grpc.CallOption) (*SayHelloResponse, error)
}

type sayHelloServiceClient struct {
	cc *grpc.ClientConn
}

func NewSayHelloServiceClient(cc *grpc.ClientConn) SayHelloServiceClient {
	return &sayHelloServiceClient{cc}
}

func (c *sayHelloServiceClient) Compute(ctx context.Context, in *SayHiRequest, opts ...grpc.CallOption) (*SayHelloResponse, error) {
	out := new(SayHelloResponse)
	err := c.cc.Invoke(ctx, "/pb.SayHelloService/Compute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SayHelloServiceServer is the server API for SayHelloService service.
type SayHelloServiceServer interface {
	Compute(context.Context, *SayHiRequest) (*SayHelloResponse, error)
}

// UnimplementedSayHelloServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSayHelloServiceServer struct {
}

func (*UnimplementedSayHelloServiceServer) Compute(ctx context.Context, req *SayHiRequest) (*SayHelloResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Compute not implemented")
}

func RegisterSayHelloServiceServer(s *grpc.Server, srv SayHelloServiceServer) {
	s.RegisterService(&_SayHelloService_serviceDesc, srv)
}

func _SayHelloService_Compute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SayHiRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SayHelloServiceServer).Compute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SayHelloService/Compute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SayHelloServiceServer).Compute(ctx, req.(*SayHiRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SayHelloService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.SayHelloService",
	HandlerType: (*SayHelloServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Compute",
			Handler:    _SayHelloService_Compute_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "services.proto",
}

// SayByeServiceClient is the client API for SayByeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SayByeServiceClient interface {
	Compute(ctx context.Context, in *SayHiRequest, opts ...grpc.CallOption) (*SayByeResponse, error)
}

type sayByeServiceClient struct {
	cc *grpc.ClientConn
}

func NewSayByeServiceClient(cc *grpc.ClientConn) SayByeServiceClient {
	return &sayByeServiceClient{cc}
}

func (c *sayByeServiceClient) Compute(ctx context.Context, in *SayHiRequest, opts ...grpc.CallOption) (*SayByeResponse, error) {
	out := new(SayByeResponse)
	err := c.cc.Invoke(ctx, "/pb.SayByeService/Compute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SayByeServiceServer is the server API for SayByeService service.
type SayByeServiceServer interface {
	Compute(context.Context, *SayHiRequest) (*SayByeResponse, error)
}

// UnimplementedSayByeServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSayByeServiceServer struct {
}

func (*UnimplementedSayByeServiceServer) Compute(ctx context.Context, req *SayHiRequest) (*SayByeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Compute not implemented")
}

func RegisterSayByeServiceServer(s *grpc.Server, srv SayByeServiceServer) {
	s.RegisterService(&_SayByeService_serviceDesc, srv)
}

func _SayByeService_Compute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SayHiRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SayByeServiceServer).Compute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.SayByeService/Compute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SayByeServiceServer).Compute(ctx, req.(*SayHiRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SayByeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.SayByeService",
	HandlerType: (*SayByeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Compute",
			Handler:    _SayByeService_Compute_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "services.proto",
}
